#!/bin/sh

# Default board file
BOARD_FILE="kanban.json"
CREATE_NEW=false
EXTERNAL=false

# Function to stop running instances
stop_instances() {
    echo "Stopping running Kanban instances..."
    # Find and kill Node.js processes running server.js
    pkill -f "node server/server.js" || {
        echo "No running instances found."
        return 0
    }
    echo "Stopped all running instances."
}

# Function to clean board name
clean_board_name() {
    # If it's an absolute path, only clean the filename if it has .json extension
    if [ "${1#/}" != "$1" ]; then
        local dir=$(dirname "$1")
        local file=$(basename "$1")
        # Only remove .json if it exists
        if [[ "$file" == *.json ]]; then
            file="${file%.json}"
        fi
        echo "$dir/$file"
    else
        # Remove .json extension (if present) for relative paths
        local cleaned=$(echo "$1" | sed 's/\.json$//')
        echo "$cleaned"
    fi
}

# Function to create a new board file
create_new_board() {
    # Clean the board name
    local clean_name=$(clean_board_name "$1")
    
    # Handle absolute paths
    if [ "${clean_name#/}" != "$clean_name" ]; then
        local file="$clean_name.json"
        local dir=$(dirname "$file")
        
        # Create directory if it doesn't exist
        mkdir -p "$dir"
    else
        local file="boards/$clean_name.json"
    fi
    
    if [ -f "$file" ]; then
        echo "Error: Board '$file' already exists"
        exit 1
    fi
    
    # Copy from example template
    cp "boards/_kanban_example.json" "$file"
    echo "Created new board from template: $file"
    BOARD_FILE="$file"
}

# Function to list available boards
list_boards() {
    echo "\nAvailable boards"
    echo "---------------"
    # List all .json files in boards directory except _kanban_example.json
    find "boards" -name "*.json" ! -name "_kanban_example.json" -exec basename {} .json \; | while read -r board; do
        echo "â€¢ $board"
    done
    echo ""
    echo "To use a board: ./_start_kanban <board_name>"
    echo "To create new: ./_start_kanban --new <board_name>"
}

# Parse arguments
while [ "$#" -gt 0 ]; do
    case "$1" in
        --stop)
            stop_instances
            exit 0
            ;;
        --list)
            list_boards
            exit 0
            ;;
        --new)
            if [ -z "$2" ]; then
                echo "Error: --new requires a board name"
                echo "Usage: ./_start_kanban --new board_name"
                exit 1
            fi
            create_new_board "$2"
            shift 2
            ;;
        --external)
            EXTERNAL=true
            shift
            ;;
        *)
            # Clean the board name if it's not --new
            BOARD_FILE="$(clean_board_name "$1")"
            
            # For absolute or external paths, check if file exists at the specified path
            if [ "${BOARD_FILE#/}" != "$BOARD_FILE" ] || [ "$EXTERNAL" = true ]; then
                if [ "$EXTERNAL" = true ] && [ "${BOARD_FILE#/}" = "$BOARD_FILE" ]; then
                    # Convert relative path to absolute for external boards
                    BOARD_FILE="$(pwd)/$BOARD_FILE"
                fi
                
                # Check both with and without .json extension
                if [ ! -f "$BOARD_FILE" ] && [ ! -f "$BOARD_FILE.json" ]; then
                    echo "Error: Board file not found at '$BOARD_FILE' or '$BOARD_FILE.json'"
                    echo "Usage: ./_start_kanban [board_file]"
                    echo "       ./_start_kanban --external [board_file]"
                    echo "       ./_start_kanban --new board_name"
                    echo "The board file must exist at the specified path"
                    exit 1
                fi
                # Use .json extension if the file exists with it
                if [ -f "$BOARD_FILE.json" ]; then
                    BOARD_FILE="$BOARD_FILE.json"
                fi
            else
                # For relative paths, check in boards directory
                if [ ! -f "boards/$BOARD_FILE.json" ]; then
                    echo "Error: Board file 'boards/$BOARD_FILE.json' not found"
                    echo "Usage: ./_start_kanban [board_file]"
                    echo "       ./_start_kanban --external [board_file]"
                    echo "       ./_start_kanban --new board_name"
                    echo "The board file should exist in the 'boards' directory"
                    exit 1
                fi
                BOARD_FILE="boards/$BOARD_FILE.json"
            fi
            shift
            ;;
    esac
done

# If no board file specified, use default
if [ -z "$BOARD_FILE" ]; then
    BOARD_FILE="boards/kanban.json"
fi

# Export the board file as an environment variable
export BOARD_FILE="$BOARD_FILE"

# Start the server
if [ "$EXTERNAL" = true ]; then
    BOARD_FILE="$BOARD_FILE" node server/server.js
else
    cd "$(dirname "$0")"
    BOARD_FILE="$BOARD_FILE" node server/server.js
fi